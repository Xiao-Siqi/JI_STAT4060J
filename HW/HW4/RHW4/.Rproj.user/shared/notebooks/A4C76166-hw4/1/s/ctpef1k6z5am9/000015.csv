"0","load_digits <- function(subset=NULL, normalize=TRUE) {"
"0","  "
"0","#Load digits and labels from digits.csv."
"0",""
"0","#Args:"
"0","#subset: A subset of digit from 0 to 9 to return."
"0","#If not specified, all digits will be returned."
"0","#normalize: Whether to normalize data values to between 0 and 1."
"0",""
"0","#Returns:"
"0","#digits: Digits data matrix of the subset specified."
"0","#The shape is (n, p), where"
"0","#n is the number of examples,"
"0","#p is the dimension of features."
"0","#labels: Labels of the digits in an (n, ) array."
"0","#Each of label[i] is the label for data[i, :]"
"0",""
"0","# load digits.csv, adopted from sklearn."
"0",""
"0","df <- fread(""digits.csv"") "
"0","df <- as.matrix(df)"
"0",""
"0","## only keep the numbers we want."
"0","if (length(subset)>0) {"
"0","  "
"0","  c <- dim(df)[2]"
"0","  l_col <- df[,c]"
"0","  index = NULL"
"0","  "
"0","  for (i in 1:length(subset)){"
"0","    "
"0","    number = subset[i]"
"0","    index = c(index,which(l_col == number))"
"0","  }"
"0","  sort(index)"
"0","  df = df[index,]"
"0","}"
"0",""
"0","# convert to arrays."
"0","digits = df[,-1]"
"0","labels = df[,c]"
"0",""
"0","# Normalize digit values to 0 and 1."
"0","if (normalize == TRUE) {"
"0","  digits = digits - min(digits)"
"0","  digits = digits/max(digits)"
"0","  }"
"0",""
"0",""
"0","# Change the labels to 0 and 1."
"0","for (i in 1:length(subset)) {"
"0","  labels[labels == subset[i]] = i-1"
"0","}"
"0",""
"0","return(list(digits, labels))"
"0","}"
"0",""
"0","split_samples <- function(digits,labels) {"
"0",""
"0","# Split the data into a training set (70%) and a testing set (30%)."
"0",""
"0","num_samples <- dim(digits)[1]"
"0","num_training <- round(num_samples*0.7)"
"0","indices = sample(1:num_samples, size = num_samples)"
"0","training_idx <- indices[1:num_training]"
"0","testing_idx <- indices[-(1:num_training)]"
"0",""
"0","return (list(digits[training_idx,], labels[training_idx],"
"0","        digits[testing_idx,], labels[testing_idx]))"
"0","}"
"0",""
