"0","kernel_SVM <- function(X_train, Y_train, X_test, Y_test, lambda = 0.01, num_iterations = 1000, learning_rate = 0.1)"
"0","{"
"0","  n <- dim(X_train)[1]"
"0","  p <- dim(X_train)[2]+1"
"0","  X_train1 <- cbind(rep(1,n), sin(X_train))"
"0","  Y_train <- 2*Y_train - 1#0,1->-1,1"
"0","  beta <- matrix(rep(0,p), nrow = p)"
"0","  "
"0","  ntest <- nrow(X_test)"
"0","  X_test1 <- cbind(rep(1,ntest), sin(X_test))"
"0","  Y_test <- 2*Y_test - 1#0,1->-1,1"
"0","  "
"0","  acc_train <- rep(0, num_iterations)"
"0","  acc_test <- rep(0, num_iterations)"
"0","  "
"0","  for(it in 1:num_iterations){"
"0","    s <- X_train1 %*% beta"
"0","    db <- s*Y_train < 1"
"0","    dbeta <- matrix(rep(1,n), nrow = 1)%*%((matrix(db*Y_train, n, p)*X_train1))/n"
"0","    beta <- beta +learning_rate *t(dbeta)"
"0","    beta[2:p] <- beta[2:p] - lambda *beta[2:p]"
"0","    "
"0","    acc_train[it] <- mean(sign(s * Y_train))"
"0","    acc_test[it] <- mean(sign(X_test1 %*% beta * Y_test))"
"0","  }"
"0","  model <- list(beta = beta, acc_train = acc_train, acc_test = acc_test)"
"0","  model"
"0","}"
